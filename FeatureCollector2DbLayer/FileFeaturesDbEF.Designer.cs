//------------------------------------------------------------------------------
// <auto-generated>
//    Dieser Code wurde aus einer Vorlage generiert.
//
//    Manuelle Änderungen an dieser Datei führen möglicherweise zu unerwartetem Verhalten Ihrer Anwendung.
//    Manuelle Änderungen an dieser Datei werden überschrieben, wenn der Code neu generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM-Beziehungsmetadaten

[assembly: EdmRelationshipAttribute("FileFeaturesDbModel", "FK_BasicFeatures_FileClasses", "FileClasses", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DMS.FCollect.Db.FileClass), "BasicFeatures", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DMS.FCollect.Db.BasicFeature), true)]
[assembly: EdmRelationshipAttribute("FileFeaturesDbModel", "FK_BasicFeatures_files", "files", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DMS.FCollect.Db.File), "BasicFeatures", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DMS.FCollect.Db.BasicFeature), true)]
[assembly: EdmRelationshipAttribute("FileFeaturesDbModel", "FK_files_FilePaths_Dir", "FilePaths", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DMS.FCollect.Db.FilePath), "files", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DMS.FCollect.Db.File), true)]
[assembly: EdmRelationshipAttribute("FileFeaturesDbModel", "FK_files_FilePaths_files", "FilePaths", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DMS.FCollect.Db.FilePath), "files", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DMS.FCollect.Db.File), true)]
[assembly: EdmRelationshipAttribute("FileFeaturesDbModel", "FK_files_FilePaths_SuperDir", "FilePaths", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DMS.FCollect.Db.FilePath), "files", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DMS.FCollect.Db.File), true)]
[assembly: EdmRelationshipAttribute("FileFeaturesDbModel", "FK_images_files", "File", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DMS.FCollect.Db.File), "image", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DMS.FCollect.Db.image), true)]

#endregion

namespace DMS.FCollect.Db
{
    #region Kontexte
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    public partial class FileFeaturesDbEntities : ObjectContext
    {
        #region Konstruktoren
    
        /// <summary>
        /// Initialisiert ein neues FileFeaturesDbEntities-Objekt mithilfe der in Abschnitt 'FileFeaturesDbEntities' der Anwendungskonfigurationsdatei gefundenen Verbindungszeichenfolge.
        /// </summary>
        public FileFeaturesDbEntities() : base("name=FileFeaturesDbEntities", "FileFeaturesDbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisiert ein neues FileFeaturesDbEntities-Objekt.
        /// </summary>
        public FileFeaturesDbEntities(string connectionString) : base(connectionString, "FileFeaturesDbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisiert ein neues FileFeaturesDbEntities-Objekt.
        /// </summary>
        public FileFeaturesDbEntities(EntityConnection connection) : base(connection, "FileFeaturesDbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partielle Methoden
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet-Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<BasicFeature> BasicFeatures
        {
            get
            {
                if ((_BasicFeatures == null))
                {
                    _BasicFeatures = base.CreateObjectSet<BasicFeature>("BasicFeatures");
                }
                return _BasicFeatures;
            }
        }
        private ObjectSet<BasicFeature> _BasicFeatures;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<FileClass> FileClasses
        {
            get
            {
                if ((_FileClasses == null))
                {
                    _FileClasses = base.CreateObjectSet<FileClass>("FileClasses");
                }
                return _FileClasses;
            }
        }
        private ObjectSet<FileClass> _FileClasses;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<FilePath> FilePaths
        {
            get
            {
                if ((_FilePaths == null))
                {
                    _FilePaths = base.CreateObjectSet<FilePath>("FilePaths");
                }
                return _FilePaths;
            }
        }
        private ObjectSet<FilePath> _FilePaths;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<File> Files
        {
            get
            {
                if ((_Files == null))
                {
                    _Files = base.CreateObjectSet<File>("Files");
                }
                return _Files;
            }
        }
        private ObjectSet<File> _Files;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<image> images
        {
            get
            {
                if ((_images == null))
                {
                    _images = base.CreateObjectSet<image>("images");
                }
                return _images;
            }
        }
        private ObjectSet<image> _images;

        #endregion

        #region AddTo-Methoden
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'BasicFeatures'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToBasicFeatures(BasicFeature basicFeature)
        {
            base.AddObject("BasicFeatures", basicFeature);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'FileClasses'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToFileClasses(FileClass fileClass)
        {
            base.AddObject("FileClasses", fileClass);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'FilePaths'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToFilePaths(FilePath filePath)
        {
            base.AddObject("FilePaths", filePath);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'Files'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToFiles(File file)
        {
            base.AddObject("Files", file);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'images'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToimages(image image)
        {
            base.AddObject("images", image);
        }

        #endregion

    }

    #endregion

    #region Entitäten
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FileFeaturesDbModel", Name="BasicFeature")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BasicFeature : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues BasicFeature-Objekt.
        /// </summary>
        /// <param name="id">Anfangswert der Eigenschaft id.</param>
        public static BasicFeature CreateBasicFeature(global::System.Int32 id)
        {
            BasicFeature basicFeature = new BasicFeature();
            basicFeature.id = id;
            return basicFeature;
        }

        #endregion

        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> fkey_id_files
        {
            get
            {
                return _fkey_id_files;
            }
            set
            {
                Onfkey_id_filesChanging(value);
                ReportPropertyChanging("fkey_id_files");
                _fkey_id_files = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("fkey_id_files");
                Onfkey_id_filesChanged();
            }
        }
        private Nullable<global::System.Int32> _fkey_id_files;
        partial void Onfkey_id_filesChanging(Nullable<global::System.Int32> value);
        partial void Onfkey_id_filesChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastAccesssTime
        {
            get
            {
                return _LastAccesssTime;
            }
            set
            {
                OnLastAccesssTimeChanging(value);
                ReportPropertyChanging("LastAccesssTime");
                _LastAccesssTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastAccesssTime");
                OnLastAccesssTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastAccesssTime;
        partial void OnLastAccesssTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnLastAccesssTimeChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastWriteTime
        {
            get
            {
                return _LastWriteTime;
            }
            set
            {
                OnLastWriteTimeChanging(value);
                ReportPropertyChanging("LastWriteTime");
                _LastWriteTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastWriteTime");
                OnLastWriteTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastWriteTime;
        partial void OnLastWriteTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnLastWriteTimeChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreationTime
        {
            get
            {
                return _CreationTime;
            }
            set
            {
                OnCreationTimeChanging(value);
                ReportPropertyChanging("CreationTime");
                _CreationTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationTime");
                OnCreationTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreationTime;
        partial void OnCreationTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnCreationTimeChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> SizeInBytes
        {
            get
            {
                return _SizeInBytes;
            }
            set
            {
                OnSizeInBytesChanging(value);
                ReportPropertyChanging("SizeInBytes");
                _SizeInBytes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SizeInBytes");
                OnSizeInBytesChanged();
            }
        }
        private Nullable<global::System.Int64> _SizeInBytes;
        partial void OnSizeInBytesChanging(Nullable<global::System.Int64> value);
        partial void OnSizeInBytesChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> fkey_FileClass
        {
            get
            {
                return _fkey_FileClass;
            }
            set
            {
                Onfkey_FileClassChanging(value);
                ReportPropertyChanging("fkey_FileClass");
                _fkey_FileClass = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("fkey_FileClass");
                Onfkey_FileClassChanged();
            }
        }
        private Nullable<global::System.Int32> _fkey_FileClass;
        partial void Onfkey_FileClassChanging(Nullable<global::System.Int32> value);
        partial void Onfkey_FileClassChanged();

        #endregion

    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FileFeaturesDbModel", "FK_BasicFeatures_FileClasses", "FileClasses")]
        public FileClass FileClass
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileClass>("FileFeaturesDbModel.FK_BasicFeatures_FileClasses", "FileClasses").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileClass>("FileFeaturesDbModel.FK_BasicFeatures_FileClasses", "FileClasses").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FileClass> FileClassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileClass>("FileFeaturesDbModel.FK_BasicFeatures_FileClasses", "FileClasses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FileClass>("FileFeaturesDbModel.FK_BasicFeatures_FileClasses", "FileClasses", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FileFeaturesDbModel", "FK_BasicFeatures_files", "files")]
        public File File
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("FileFeaturesDbModel.FK_BasicFeatures_files", "files").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("FileFeaturesDbModel.FK_BasicFeatures_files", "files").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<File> FileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("FileFeaturesDbModel.FK_BasicFeatures_files", "files");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<File>("FileFeaturesDbModel.FK_BasicFeatures_files", "files", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FileFeaturesDbModel", Name="File")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class File : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues File-Objekt.
        /// </summary>
        /// <param name="id">Anfangswert der Eigenschaft id.</param>
        /// <param name="file_uid">Anfangswert der Eigenschaft file_uid.</param>
        /// <param name="dir_uid">Anfangswert der Eigenschaft dir_uid.</param>
        /// <param name="super_dir_uid">Anfangswert der Eigenschaft super_dir_uid.</param>
        /// <param name="fkey_file_id">Anfangswert der Eigenschaft fkey_file_id.</param>
        /// <param name="fkey_dir_id">Anfangswert der Eigenschaft fkey_dir_id.</param>
        /// <param name="rating_up">Anfangswert der Eigenschaft rating_up.</param>
        /// <param name="rating_down">Anfangswert der Eigenschaft rating_down.</param>
        public static File CreateFile(global::System.Int32 id, global::System.Guid file_uid, global::System.Guid dir_uid, global::System.Guid super_dir_uid, global::System.Int32 fkey_file_id, global::System.Int32 fkey_dir_id, global::System.Int32 rating_up, global::System.Int32 rating_down)
        {
            File file = new File();
            file.id = id;
            file.file_uid = file_uid;
            file.dir_uid = dir_uid;
            file.super_dir_uid = super_dir_uid;
            file.fkey_file_id = fkey_file_id;
            file.fkey_dir_id = fkey_dir_id;
            file.rating_up = rating_up;
            file.rating_down = rating_down;
            return file;
        }

        #endregion

        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid file_uid
        {
            get
            {
                return _file_uid;
            }
            set
            {
                Onfile_uidChanging(value);
                ReportPropertyChanging("file_uid");
                _file_uid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("file_uid");
                Onfile_uidChanged();
            }
        }
        private global::System.Guid _file_uid;
        partial void Onfile_uidChanging(global::System.Guid value);
        partial void Onfile_uidChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid dir_uid
        {
            get
            {
                return _dir_uid;
            }
            set
            {
                Ondir_uidChanging(value);
                ReportPropertyChanging("dir_uid");
                _dir_uid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dir_uid");
                Ondir_uidChanged();
            }
        }
        private global::System.Guid _dir_uid;
        partial void Ondir_uidChanging(global::System.Guid value);
        partial void Ondir_uidChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid super_dir_uid
        {
            get
            {
                return _super_dir_uid;
            }
            set
            {
                Onsuper_dir_uidChanging(value);
                ReportPropertyChanging("super_dir_uid");
                _super_dir_uid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("super_dir_uid");
                Onsuper_dir_uidChanged();
            }
        }
        private global::System.Guid _super_dir_uid;
        partial void Onsuper_dir_uidChanging(global::System.Guid value);
        partial void Onsuper_dir_uidChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 fkey_file_id
        {
            get
            {
                return _fkey_file_id;
            }
            set
            {
                Onfkey_file_idChanging(value);
                ReportPropertyChanging("fkey_file_id");
                _fkey_file_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("fkey_file_id");
                Onfkey_file_idChanged();
            }
        }
        private global::System.Int32 _fkey_file_id;
        partial void Onfkey_file_idChanging(global::System.Int32 value);
        partial void Onfkey_file_idChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 fkey_dir_id
        {
            get
            {
                return _fkey_dir_id;
            }
            set
            {
                Onfkey_dir_idChanging(value);
                ReportPropertyChanging("fkey_dir_id");
                _fkey_dir_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("fkey_dir_id");
                Onfkey_dir_idChanged();
            }
        }
        private global::System.Int32 _fkey_dir_id;
        partial void Onfkey_dir_idChanging(global::System.Int32 value);
        partial void Onfkey_dir_idChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> fkey_super_dir_id
        {
            get
            {
                return _fkey_super_dir_id;
            }
            set
            {
                Onfkey_super_dir_idChanging(value);
                ReportPropertyChanging("fkey_super_dir_id");
                _fkey_super_dir_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("fkey_super_dir_id");
                Onfkey_super_dir_idChanged();
            }
        }
        private Nullable<global::System.Int32> _fkey_super_dir_id;
        partial void Onfkey_super_dir_idChanging(Nullable<global::System.Int32> value);
        partial void Onfkey_super_dir_idChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String filename
        {
            get
            {
                return _filename;
            }
            set
            {
                OnfilenameChanging(value);
                ReportPropertyChanging("filename");
                _filename = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("filename");
                OnfilenameChanged();
            }
        }
        private global::System.String _filename;
        partial void OnfilenameChanging(global::System.String value);
        partial void OnfilenameChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String keywords
        {
            get
            {
                return _keywords;
            }
            set
            {
                OnkeywordsChanging(value);
                ReportPropertyChanging("keywords");
                _keywords = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("keywords");
                OnkeywordsChanged();
            }
        }
        private global::System.String _keywords;
        partial void OnkeywordsChanging(global::System.String value);
        partial void OnkeywordsChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 rating_up
        {
            get
            {
                return _rating_up;
            }
            set
            {
                Onrating_upChanging(value);
                ReportPropertyChanging("rating_up");
                _rating_up = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("rating_up");
                Onrating_upChanged();
            }
        }
        private global::System.Int32 _rating_up;
        partial void Onrating_upChanging(global::System.Int32 value);
        partial void Onrating_upChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 rating_down
        {
            get
            {
                return _rating_down;
            }
            set
            {
                Onrating_downChanging(value);
                ReportPropertyChanging("rating_down");
                _rating_down = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("rating_down");
                Onrating_downChanged();
            }
        }
        private global::System.Int32 _rating_down;
        partial void Onrating_downChanging(global::System.Int32 value);
        partial void Onrating_downChanged();

        #endregion

    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FileFeaturesDbModel", "FK_BasicFeatures_files", "BasicFeatures")]
        public EntityCollection<BasicFeature> BasicFeatures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BasicFeature>("FileFeaturesDbModel.FK_BasicFeatures_files", "BasicFeatures");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BasicFeature>("FileFeaturesDbModel.FK_BasicFeatures_files", "BasicFeatures", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FileFeaturesDbModel", "FK_files_FilePaths_Dir", "FilePaths")]
        public FilePath Dir
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FilePath>("FileFeaturesDbModel.FK_files_FilePaths_Dir", "FilePaths").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FilePath>("FileFeaturesDbModel.FK_files_FilePaths_Dir", "FilePaths").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FilePath> DirReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FilePath>("FileFeaturesDbModel.FK_files_FilePaths_Dir", "FilePaths");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FilePath>("FileFeaturesDbModel.FK_files_FilePaths_Dir", "FilePaths", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FileFeaturesDbModel", "FK_files_FilePaths_files", "FilePaths")]
        public FilePath FilePath
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FilePath>("FileFeaturesDbModel.FK_files_FilePaths_files", "FilePaths").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FilePath>("FileFeaturesDbModel.FK_files_FilePaths_files", "FilePaths").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FilePath> FilePathReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FilePath>("FileFeaturesDbModel.FK_files_FilePaths_files", "FilePaths");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FilePath>("FileFeaturesDbModel.FK_files_FilePaths_files", "FilePaths", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FileFeaturesDbModel", "FK_files_FilePaths_SuperDir", "FilePaths")]
        public FilePath Superdir
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FilePath>("FileFeaturesDbModel.FK_files_FilePaths_SuperDir", "FilePaths").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FilePath>("FileFeaturesDbModel.FK_files_FilePaths_SuperDir", "FilePaths").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FilePath> SuperdirReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FilePath>("FileFeaturesDbModel.FK_files_FilePaths_SuperDir", "FilePaths");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FilePath>("FileFeaturesDbModel.FK_files_FilePaths_SuperDir", "FilePaths", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FileFeaturesDbModel", "FK_images_files", "image")]
        public EntityCollection<image> images
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<image>("FileFeaturesDbModel.FK_images_files", "image");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<image>("FileFeaturesDbModel.FK_images_files", "image", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FileFeaturesDbModel", Name="FileClass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FileClass : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues FileClass-Objekt.
        /// </summary>
        /// <param name="id">Anfangswert der Eigenschaft id.</param>
        /// <param name="name">Anfangswert der Eigenschaft name.</param>
        public static FileClass CreateFileClass(global::System.Int32 id, global::System.String name)
        {
            FileClass fileClass = new FileClass();
            fileClass.id = id;
            fileClass.name = name;
            return fileClass;
        }

        #endregion

        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FileFeaturesDbModel", "FK_BasicFeatures_FileClasses", "BasicFeatures")]
        public EntityCollection<BasicFeature> BasicFeatures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BasicFeature>("FileFeaturesDbModel.FK_BasicFeatures_FileClasses", "BasicFeatures");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BasicFeature>("FileFeaturesDbModel.FK_BasicFeatures_FileClasses", "BasicFeatures", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FileFeaturesDbModel", Name="FilePath")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FilePath : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues FilePath-Objekt.
        /// </summary>
        /// <param name="id">Anfangswert der Eigenschaft id.</param>
        /// <param name="path">Anfangswert der Eigenschaft path.</param>
        /// <param name="uid">Anfangswert der Eigenschaft uid.</param>
        public static FilePath CreateFilePath(global::System.Int32 id, global::System.String path, global::System.Guid uid)
        {
            FilePath filePath = new FilePath();
            filePath.id = id;
            filePath.path = path;
            filePath.uid = uid;
            return filePath;
        }

        #endregion

        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String path
        {
            get
            {
                return _path;
            }
            set
            {
                OnpathChanging(value);
                ReportPropertyChanging("path");
                _path = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("path");
                OnpathChanged();
            }
        }
        private global::System.String _path;
        partial void OnpathChanging(global::System.String value);
        partial void OnpathChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid uid
        {
            get
            {
                return _uid;
            }
            set
            {
                OnuidChanging(value);
                ReportPropertyChanging("uid");
                _uid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("uid");
                OnuidChanged();
            }
        }
        private global::System.Guid _uid;
        partial void OnuidChanging(global::System.Guid value);
        partial void OnuidChanged();

        #endregion

    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FileFeaturesDbModel", "FK_files_FilePaths_Dir", "files")]
        public EntityCollection<File> Dirs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<File>("FileFeaturesDbModel.FK_files_FilePaths_Dir", "files");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<File>("FileFeaturesDbModel.FK_files_FilePaths_Dir", "files", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FileFeaturesDbModel", "FK_files_FilePaths_files", "files")]
        public EntityCollection<File> Files
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<File>("FileFeaturesDbModel.FK_files_FilePaths_files", "files");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<File>("FileFeaturesDbModel.FK_files_FilePaths_files", "files", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FileFeaturesDbModel", "FK_files_FilePaths_SuperDir", "files")]
        public EntityCollection<File> SuperDirs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<File>("FileFeaturesDbModel.FK_files_FilePaths_SuperDir", "files");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<File>("FileFeaturesDbModel.FK_files_FilePaths_SuperDir", "files", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FileFeaturesDbModel", Name="image")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class image : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues image-Objekt.
        /// </summary>
        /// <param name="id">Anfangswert der Eigenschaft id.</param>
        /// <param name="fkey_id_files">Anfangswert der Eigenschaft fkey_id_files.</param>
        /// <param name="description">Anfangswert der Eigenschaft description.</param>
        /// <param name="img">Anfangswert der Eigenschaft img.</param>
        public static image Createimage(global::System.Int32 id, global::System.Int32 fkey_id_files, global::System.String description, global::System.Byte[] img)
        {
            image image = new image();
            image.id = id;
            image.fkey_id_files = fkey_id_files;
            image.description = description;
            image.img = img;
            return image;
        }

        #endregion

        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 fkey_id_files
        {
            get
            {
                return _fkey_id_files;
            }
            set
            {
                Onfkey_id_filesChanging(value);
                ReportPropertyChanging("fkey_id_files");
                _fkey_id_files = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("fkey_id_files");
                Onfkey_id_filesChanged();
            }
        }
        private global::System.Int32 _fkey_id_files;
        partial void Onfkey_id_filesChanging(global::System.Int32 value);
        partial void Onfkey_id_filesChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] img
        {
            get
            {
                return StructuralObject.GetValidValue(_img);
            }
            set
            {
                OnimgChanging(value);
                ReportPropertyChanging("img");
                _img = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("img");
                OnimgChanged();
            }
        }
        private global::System.Byte[] _img;
        partial void OnimgChanging(global::System.Byte[] value);
        partial void OnimgChanged();

        #endregion

    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FileFeaturesDbModel", "FK_images_files", "File")]
        public File File
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("FileFeaturesDbModel.FK_images_files", "File").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("FileFeaturesDbModel.FK_images_files", "File").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<File> FileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("FileFeaturesDbModel.FK_images_files", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<File>("FileFeaturesDbModel.FK_images_files", "File", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
